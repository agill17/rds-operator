apiVersion: v1
kind: Namespace
metadata:
  name: amrit
---
apiVersion: v1
kind: Secret
metadata:
  name: cluster-credentials
  namespace: amrit
type: Opaque
data:
  MASTER_USERNAME: cm9vdA==
  MASTER_PASSWORD: cGFzc3dvcmQ=
---
apiVersion: agill.apps/v1alpha1
kind: DBCluster
metadata:
  name: aurora-cluster
  namespace: amrit
region: us-east-1
serviceName: db-cluster
clusterSpec:
  engine: aurora-mysql
  engineMode: provisioned
  engineVersion: 5.7.12
  availabilityZones:
    - us-east-1a
    - us-east-1b
  backupRetentionPeriod: 1
  dbClusterIdentifier: amrit-aurora-cluster ## required
  databaseName: test
  deletionProtection: false
  # MasterUsername: root # not required if credentialsFrom set ( if none passed: generates a random one if not passed )
  # MasterUserPassword: password # not required if credentialsFrom set ( if none passed: generates a random one if not passed )
  storageEncrypted: false
  credentialsFrom:
    secret:
      name: cluster-credentials
    usernameKey: MASTER_USERNAME
    passwordKey: MASTER_PASSWORD
#---
#apiVersion: agill.apps/v1alpha1
#kind: DBInstance
#metadata:
#  name: aurora-instance
#  namespace: amrit
#spec:
#  createInstanceSpec:
#    ## all available create fields
#    # https://docs.aws.amazon.com/sdk-for-go/api/service/rds/#CreateDBInstanceInput
#    AutoMinorVersionUpgrade: false
#    CopyTagsToSnapshot: true
#    DBClusterIdentifier: amrit-aurora-cluster
#    DBInstanceIdentifier: amrit-aurora-instance
#    AvailabilityZone: us-east-1a
#    Engine: aurora-mysql
#    MultiAZ: false
#    PubliclyAccessible: true
#    EngineVersion: 5.7.12
#    DBInstanceClass: db.t2.small
#  deleteInstanceSpec:
#    DeleteAutomatedBackups: false
#    SkipFinalSnapshot: falsedatabaseName

